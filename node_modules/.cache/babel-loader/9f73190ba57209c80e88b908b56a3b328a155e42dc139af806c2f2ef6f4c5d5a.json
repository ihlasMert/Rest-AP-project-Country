{"ast":null,"code":"var _jsxFileName = \"/Users/ihlasmert/Desktop/01-starting-project 3/src/components/AllCountries/AllCountries.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { apiURL } from \"../util/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllCountries = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const getAllCountries = async () => {\n    try {\n      const res = await fetch(`${apiURL}/all`);\n      if (!res.ok) throw new Error(\"Something went wrong!\");\n      const data = await res.json();\n      console.log(data);\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  useEffect(() => {\n    getAllCountries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all__country__wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country__top\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country__button\",\n        children: [isLoading && !error && /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading ......\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 35\n        }, this), error && !isLoading && /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 35\n        }, this), countries]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(AllCountries, \"fhz3OS7BVETzsc7B/TH4r51GfWQ=\");\n_c = AllCountries;\nexport default AllCountries;\nvar _c;\n$RefreshReg$(_c, \"AllCountries\");","map":{"version":3,"names":["React","useEffect","useState","apiURL","jsxDEV","_jsxDEV","AllCountries","_s","countries","setCountries","isLoading","setIsLoading","error","setError","getAllCountries","res","fetch","ok","Error","data","json","console","log","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ihlasmert/Desktop/01-starting-project 3/src/components/AllCountries/AllCountries.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { apiURL } from \"../util/api\"\n\nconst AllCountries = () => {\n  const [countries, setCountries] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState(\"\")\n  const getAllCountries = async () => {\n    try {\n      const res = await fetch(`${apiURL}/all`)\n      if (!res.ok) throw new Error(\"Something went wrong!\")\n      const data = await res.json()\n      console.log(data)\n      setCountries(data)\n      setIsLoading(false)\n    } catch (error) {\n      setIsLoading(false)\n      setError(error.message)\n    }\n  }\n  useEffect(() => {\n    getAllCountries()\n  }, [])\n  return (\n    <div className='all__country__wrapper'>\n      <div className='country__top'>\n        <div className='country__button'>\n          {isLoading && !error && <h4>Loading ......</h4>}\n          {error && !isLoading && <h4>{error}</h4>}\n          {countries}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AllCountries\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEb,MAAO,MAAK,CAAC;MACxC,IAAI,CAACY,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MACrD,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,EAAE;MAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBV,YAAY,CAACU,IAAI,CAAC;MAClBR,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdD,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAACD,KAAK,CAACW,OAAO,CAAC;IACzB;EACF,CAAC;EACDtB,SAAS,CAAC,MAAM;IACda,eAAe,EAAE;EACnB,CAAC,EAAE,EAAE,CAAC;EACN,oBACET,OAAA;IAAKmB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,eACpCpB,OAAA;MAAKmB,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BpB,OAAA;QAAKmB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAC7Bf,SAAS,IAAI,CAACE,KAAK,iBAAIP,OAAA;UAAAoB,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,EAC9CjB,KAAK,IAAI,CAACF,SAAS,iBAAIL,OAAA;UAAAoB,QAAA,EAAKb;QAAK;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,EACvCrB,SAAS;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAAtB,EAAA,CA/BKD,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAiClB,eAAeA,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}