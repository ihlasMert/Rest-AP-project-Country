{"ast":null,"code":"var _jsxFileName = \"/Users/ihlasmert/Desktop/country-rest-api/src/components/CountryInfo/CountryInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { apiURL } from \"../util/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryInfo = () => {\n  _s();\n  const [country, setCountry] = useState([]);\n  const [isLoading, setIsLoading] = [true];\n  const [error, setError] = useState(\"\");\n  const {\n    countryName\n  } = useParams();\n  const getCountryByName = async () => {\n    try {\n      const res = await fetch(`${apiURL}/name/${countryName}`);\n      if (!res.ok) throw new Error(\"Could not found!\");\n      const data = await res.json();\n      setCountry(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  useEffect();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"country__info__wrapper\",\n    children: \"CountryInfo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n_s(CountryInfo, \"Z+fp079nzK7KH5fl/jS5Xk+PReU=\", false, function () {\n  return [useParams];\n});\n_c = CountryInfo;\nexport default CountryInfo;\nvar _c;\n$RefreshReg$(_c, \"CountryInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","apiURL","jsxDEV","_jsxDEV","CountryInfo","_s","country","setCountry","isLoading","setIsLoading","error","setError","countryName","getCountryByName","res","fetch","ok","Error","data","json","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ihlasmert/Desktop/country-rest-api/src/components/CountryInfo/CountryInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { apiURL } from \"../util/api\"\n\nconst CountryInfo = () => {\n  const [country, setCountry] = useState([])\n  const [isLoading, setIsLoading] = [true]\n  const [error, setError] = useState(\"\")\n\n  const { countryName } = useParams()\n\n  const getCountryByName = async () => {\n    try {\n      const res = await fetch(`${apiURL}/name/${countryName}`)\n      if (!res.ok) throw new Error(\"Could not found!\")\n      const data = await res.json()\n      setCountry(data)\n      setIsLoading(false)\n    } catch (error) {\n      setIsLoading(false)\n      setError(error.message)\n    }\n  }\n\n\n\n\n  useEffect()\n  return <div className=\"country__info__wrapper\">CountryInfo</div>\n}\n\nexport default CountryInfo\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,MAAM,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM;IAAEc;EAAY,CAAC,GAAGZ,SAAS,EAAE;EAEnC,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEd,MAAO,SAAQW,WAAY,EAAC,CAAC;MACxD,IAAI,CAACE,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;MAChD,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,EAAE;MAC7BZ,UAAU,CAACW,IAAI,CAAC;MAChBT,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdD,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAACD,KAAK,CAACU,OAAO,CAAC;IACzB;EACF,CAAC;EAKDrB,SAAS,EAAE;EACX,oBAAOI,OAAA;IAAKkB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,EAAC;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AAClE,CAAC;AAAArB,EAAA,CAzBKD,WAAW;EAAA,QAKSJ,SAAS;AAAA;AAAA2B,EAAA,GAL7BvB,WAAW;AA2BjB,eAAeA,WAAW;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}